package salipaivakirja.test;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.Iterator;
import static org.junit.Assert.*;
import org.junit.*;
import salipaivakirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.03.24 12:38:29 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class LiikkeetTest {



  // Generated by ComTest BEGIN
  /** 
   * testAnnaLiike93 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaLiike93() throws SailoException {    // Liikkeet: 93
    Liikkeet l = new Liikkeet(); 
    l.lisaa(new Liike("kuperkeikka",true)); 
    assertEquals("From: Liikkeet line: 97", "kuperkeikka", l.annaLiike(1).getLiikkeenNimi()); 
    try {
    l.annaLiike(2); 
    fail("Liikkeet: 98 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    l.lisaa(new Liike("karrynpyora", true)); 
    assertEquals("From: Liikkeet line: 100", "karrynpyora", l.annaLiike(2).getLiikkeenNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testOnkoUusi137 
   * @throws SailoException when error
   */
  @Test
  public void testOnkoUusi137() throws SailoException {    // Liikkeet: 137
    Liikkeet l = new Liikkeet(); 
    l.lisaa(new Liike("kuperkeikka",true)); 
    assertEquals("From: Liikkeet line: 141", false, l.onkoUusi("kuperkeikka")); 
    assertEquals("From: Liikkeet line: 142", false, l.onkoUusi(" Kuperkeikka  ")); 
    assertEquals("From: Liikkeet line: 143", true, l.onkoUusi("kuperke ikka")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedosto161 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedosto161() throws SailoException {    // Liikkeet: 161
    Liikkeet liikkeet = new Liikkeet(); 
    Liike l1 = new Liike("leuanveto"); 
    Liike l2 = new Liike("kyykky"); 
    Liike l3 = new Liike("penkkipunnerrus"); 
    Liike l4 = new Liike("kuperkeikka"); 
    Liike l5 = new Liike("alatalja"); 
    String tiedNimi = "liikkeetTesti"; 
    File ftied = new File(tiedNimi); 
    assertEquals("From: Liikkeet line: 173", true, ftied.delete()); 
    try {
    liikkeet.lueTiedosto(tiedNimi); 
    fail("Liikkeet: 174 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    liikkeet.lisaa(l1); 
    liikkeet.lisaa(l2); 
    liikkeet.lisaa(l3); 
    liikkeet.lisaa(l4); 
    liikkeet.lisaa(l5); 
    liikkeet.tallenna(tiedNimi); 
    liikkeet = new Liikkeet(); 
    liikkeet.lueTiedosto(tiedNimi); 
    Iterator<Liike> i = liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 184", l1.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 185", l2.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 186", l3.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 187", l4.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 188", l5.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 189", false, i.hasNext()); 
  } // Generated by ComTest END
}